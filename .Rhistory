# # Converter o gráfico ggplot para plotly com o hovertext
# interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
# interactive_plot_1
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.5, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
# interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
# interactive_plot_1
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.4, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
# interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
# interactive_plot_1
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.4, "in"), pad_y = unit(0.4, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
# interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
# interactive_plot_1
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.4, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
# interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
# interactive_plot_1
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
# interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
# interactive_plot_1
# Converter o gráfico ggplot para plotly com o hovertext
interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# Exibir o gráfico interativo
interactive_plot_1
library(tidyr)
# organiza base com os dados necessários e calcula a diferença
base1 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,p.pib) %>% spread(.,ano,p.pib) %>% mutate(dif_2019_2010 = round(`2019`-`2010`,2))
# organiza tabela com os dez municípios que mais ganharam participação
arrange(base1,desc(base1$dif_2019_2010))[1:10,c("code_muni","nome_mun","dif_2019_2010")]
# organiza tabela com os dez municípios que mais perderam participação
arrange(base1,base1$dif_2019_2010)[1:10,c("code_muni","nome_mun","dif_2019_2010")]
# base_2019 <- pib_mun_mg %>% select(ano,code_muni,nome_mun,va,va_agro,va_ind,va_serv,va_admin) %>% filter(ano==2019)
#
# base1 <- merge(base1,base_2019)
#
# ggplot(base1, aes(x=dif_2019_2010, y=log(va))) +
#     geom_point()
library(geobr)
mun <- read_municipality(code_muni = "MG", year = 2019)
#Juntar coordenadas para criar o mapa
base_mapa<- left_join(base1, mun , by = 'code_muni')
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
interactive_plot_1
# Converter o gráfico ggplot para plotly com o hovertext
interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# Exibir o gráfico interativo
interactive_plot_1
# Carregar bibliotecas
library(ggplot2)
library(plotly)
library(ggspatial)
# Criar o gráfico ggplot com o PIB
ggplot_obj_1 <- base_mapa %>%
ggplot() +
geom_sf(data = base_mapa$geom, aes(fill = base_mapa$dif_2019_2010,
text = paste("Município: ", base_mapa$nome_mun, "<br>Diferença participação: ", base_mapa$dif_2019_2010, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Diferença part.') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Diferença de participação do PIB dos Municípios de MG - 2019-2010 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_1
# # Converter o gráfico ggplot para plotly com o hovertext
interactive_plot_1 <- ggplotly(ggplot_obj_1, tooltip = "text")
# # Exibir o gráfico interativo
interactive_plot_1
# organiza base com os dados necessários e calcula a diferença
base2 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,p.agro,p.ind,p.) %>% filter(ano==2020)
# organiza base com os dados necessários e calcula a diferença
base2 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,p.agro,p.ind,p.admin) %>% filter(ano==2020)
View(base2)
# organiza base com os dados necessários e calcula a diferença
base2 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,p.agro,p.ind,p.serv,p.admin) %>% filter(ano==2020)
View(base2)
38.444659317+
6.674927+
29.833228+
25.047185
View(base1)
sum(base1$2010)
sum(base1$2010)
base1$2010
str(base1)
sum(base1[,3])
sum(base1[,4])
# organiza tabela com os dez municípios que mais ganharam participação
arrange(base1,desc(base2$va_agro))[1:10,c("code_muni","nome_mun","va_agro")]
# organiza base com os dados necessários e calcula a diferença
base2 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,p.agro,p.ind,p.serv,p.admin) %>% filter(ano==2020)
View(base2)
# organiza tabela com os dez municípios que mais ganharam participação
arrange(base1,desc(base2$vp.agro))[1:10,c("code_muni","nome_mun","p.agro")]
# organiza tabela com os dez municípios que mais ganharam participação
arrange(base1,desc(base2$p.agro))[1:10,c("code_muni","nome_mun","p.agro")]
# organiza tabela com os dez municípios que mais ganharam participação
arrange(base2,desc(base2$p.agro))[1:10,c("code_muni","nome_mun","p.agro")]
# organiza tabela com os dez municípios em que a industria é mais importante
arrange(base2,desc(base2$p.ind))[1:10,c("code_muni","nome_mun","p.ind")]
# organiza tabela com os dez municípios em que os serviços é mais importante
arrange(base2,desc(base2$p.serv))[1:10,c("code_muni","nome_mun","p.serv")]
# organiza tabela com os dez municípios em que a administração pública é mais importante
arrange(base2,desc(base2$p.admin))[1:10,c("code_muni","nome_mun","p.admin")]
#Juntar coordenadas para criar o mapa
base_mapa2<- left_join(base2, mun , by = 'code_muni')
#Juntar coordenadas para criar o mapa
base_mapa2<- left_join(base2, mun , by = 'code_muni')
# Agropecuária
ggplot_obj_2 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.agro,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Agropecuária: ", base_mapa2$p.agro, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Agropecuária') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Agropecuária no VA total municipal- 2020(%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_2
#Juntar coordenadas para criar o mapa
base_mapa2<- left_join(base2, mun , by = 'code_muni')
# Agropecuária
ggplot_obj_2 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.agro,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Agropecuária: ", base_mapa2$p.agro, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Agropecuária') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Agropecuária no VA total municipal - 2020(%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_2
# Indústria
ggplot_obj_3 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.ind,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Indústria: ", base_mapa2$p.ind, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Indústria') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Indústria no VA total municipal - 2020(%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_3
# Serviços
ggplot_obj_4 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.serv,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Serviços: ", base_mapa2$p.serv, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Serviços') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação dos Serviços no VA total municipal - 2020(%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_4
# Admnistração Pública
ggplot_obj_5 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.admin,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Adm. Pública: ", base_mapa2$p.admin, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Adm. Publica') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Admin. Pública no VA total municipal- 2020(%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_5
#Juntar coordenadas para criar o mapa
base_mapa2<- left_join(base2, mun , by = 'code_muni')
# Agropecuária
ggplot_obj_2 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.agro,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Agropecuária: ", base_mapa2$p.agro, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Agropecuária') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Agropecuária no VA total municipal - 2020 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_2
# Indústria
ggplot_obj_3 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.ind,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Indústria: ", base_mapa2$p.ind, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Indústria') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Indústria no VA total municipal - 2020 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_3
# Serviços
ggplot_obj_4 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.serv,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Serviços: ", base_mapa2$p.serv, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Serviços') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação dos Serviços no VA total municipal - 2020 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_4
# Admnistração Pública
ggplot_obj_5 <- base_mapa2 %>%
ggplot() +
geom_sf(data = base_mapa2$geom, aes(fill = base_mapa2$p.admin,
text = paste("Município: ", base_mapa2$nome_mun, "<br>Part. Adm. Pública: ", base_mapa2$p.admin, "%"))) +
scale_fill_viridis_c(option = 15, begin = 0.2, end = 0.8, name = 'Part. Adm. Publica') +
annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.3, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
theme(panel.grid = element_line(colour = "transparent"),panel.background =  element_blank(),axis.text = element_blank(),axis.ticks = element_blank()) +
labs(title = "Participação da Admin. Pública no VA total municipal- 2020 (%)", subtitle = "",caption = 'Fonte: IBGE. Elaboração própria', size = 8)
ggplot_obj_5
# organiza base com os dados necessários e calcula a diferença
base3 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,pib_pc) %>% filter(ano==2010)
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(base3,desc(base2$pib_pc))[1:10,c("code_muni","nome_mun","pib_pc")]
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(base3,desc(base3$pib_pc))[1:10,c("code_muni","nome_mun","pib_pc")]
arrange(base3,base3$pib_pc)[1:10,c("code_muni","nome_mun","pib_pc")]
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(base3,desc(base3$pib_pc))[1:10,c("code_muni","nome_mun","pib_pc")]
View(base3)
library(tidyr)
# organiza base com os dados necessários e calcula a diferença
base3 <- pib_mun_mg %>%  select(ano,code_muni, nome_mun,pib_pc) %>% filter(ano==2010)
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(base3,desc(base3$pib_pc))[1:10,c("code_muni","nome_mun","pib_pc")]
arrange(base3,base3$pib_pc)[1:10,c("code_muni","nome_mun","pib_pc")]
library(readr)
experanca_vida_nascer_mg <- read_csv("experanca_vida_nascer_mg.csv")
experanca_vida_nascer_mg <- read.csv2("~/GitHub/mqagp/experanca_vida_nascer_mg.csv")
library(readxl)
experanca_vida_nascer_mg <- read_excel("experanca_vida_nascer_mg.xlsx",
col_types = c("numeric", "text", "numeric"))
View(experanca_vida_nascer_mg)
library(readxl)
experanca <- read_excel("experanca_vida_nascer_mg.xlsx",
+     col_types = c("numeric", "text", "numeric"))
library(readxl)
experanca <- read_excel("experanca_vida_nascer_mg.xlsx",
col_types = c("numeric", "text", "numeric"))
library(readxl)
experanca <- read_excel("experanca_vida_nascer_mg.xlsx",
col_types = c("numeric", "text", "numeric"))
View(experanca)
colnames(base3)
View(base3)
colnames(experanca )
colnames(esperanca) <- c("code_muni","Município","e0")
library(readxl)
esperanca <- read_excel("esperanca_vida_nascer_mg.xlsx",
col_types = c("numeric", "text", "numeric"))
colnames(esperanca) <- c("code_muni","Município","e0")
base3 <-
base3 <- merge(base3,esperanca)
View(base3)
colnames(base3)
ggplot(base3, aes(x=pib_pc, y=e0)) +
geom_point()
ggplot(base3, aes(x=log(pib_pc), y=e0)) +
geom_point()
cor(log(base3$pib_pc),base3$e0)
library(readxl)
esperanca <- read_excel("esperanca_vida_nascer_mg.xlsx",
col_types = c("numeric", "text", "numeric"))
colnames(esperanca) <- c("code_muni","Município","e0")
base3 <- merge(base3,esperanca)
ggplot(base3, aes(x=log(pib_pc), y=e0)) +
geom_point()
cor(log(base3$pib_pc),base3$e0)
hist(base3$e0)
hist(base3$pib_pc)
hist(log(base3$pib_pc))
boxplot(base3$e0)
boxplot(base3$pib_pc)
boxplot(log(base3$pib_pc))
boxplot(base3$pib_pc)
boxplot(log(base3$pib_pc))
summary(base3$e0)
summary(base3$pib_pc)
cor.test(log(base3$pib_pc),base3$e0)
glm(e0 ~ pib_pc, base3)
?glm
glm(e0 ~ log(pib_pc), data = base3)
model1 <- glm(e0 ~ log(pib_pc), data = base3)
View(model1)
anova(model1)
summary(model1)
exp(1)
log(2.718282)
library(readxl)
esperanca <- read_excel("esperanca_vida_nascer_mg.xlsx",
col_types = c("numeric", "text", "numeric"))
colnames(esperanca) <- c("code_muni","Município","e0")
base3 <- merge(base3,esperanca)
summary(base3$e0)
hist(base3$e0)
boxplot(base3$e0)
summary(base3$pib_pc)
hist(base3$pib_pc)
boxplot(base3$pib_pc)
hist(log(base3$pib_pc))
boxplot(log(base3$pib_pc))
ggplot(base3, aes(x=log(pib_pc), y=e0)) +
geom_point()
cor(log(base3$pib_pc),base3$e0)
cor.test(log(base3$pib_pc),base3$e0)
model1 <- glm(e0 ~ log(pib_pc), data = base3)
summary(model1)
0.5622577^2
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(esperanca,desc(esperanca$e0))[1:10,c("code_muni","nome_mun","e0")]
colnames(esperanca)
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(esperanca,desc(esperanca$e0))[1:10,c("code_muni", "Município""e0")]
# organiza tabela com os dez municípios com maiores PIB percapita e aqueles os 10 menores
arrange(esperanca,desc(esperanca$e0))[1:10,c("code_muni", "Município","e0")]
arrange(esperanca,esperanca$e0)[1:10,c("code_muni", "Município","e0")]
# Regressão linear
model1 <- glm(e0 ~ log(pib_pc), data = base3)
summary(model1)
# Regressão linear
model1 <- lm(e0 ~ log(pib_pc), data = base3)
summary(model1)
library(geobr)
mun <- read_municipality(code_muni = "MG", year = 2019)
#Juntar coordenadas para criar o mapa
base_mapa<- left_join(base1, mun , by = 'code_muni')
model2 <- lm(e0 ~ log(pib_pc) + log(pib_pc)^2, data = base3)
summary(model2)
# Regressão linear
model1 <- lm(e0 ~ log(pib_pc), data = base3)
summary(model1)
model2 <- lm(e0 ~ log(pib_pc) + log(pib_pc)^2, data = base3)
summary(model2)
base3$log_pib_pc_2 <- log(base3$pib_pc)^2
View(base3)
model2 <- lm(e0 ~ log(pib_pc) + log_pib_pc_2, data = base3)
summary(model2)
# Regressão linear
model1 <- lm(e0 ~ log(pib_pc), data = base3)
summary(model1)
# Regressão múltipla
base3$log_pib_pc_2 <- log(base3$pib_pc)^2
model2 <- lm(e0 ~ log(pib_pc) + log_pib_pc_2, data = base3)
summary(model2)
cor(log(base3$pib_pc),base3$e0)^2
library(geobr)
mun <- read_municipality(code_muni = "MG", year = 2019)
#Juntar coordenadas para criar o mapa
base_mapa<- left_join(base1, mun , by = 'code_muni')
library(geobr)
mun <- read_municipality(code_muni = "MG", year = 2019)
#Juntar coordenadas para criar o mapa
base_mapa<- left_join(base1, mun , by = 'code_muni')
library(geobr)
mun <- read_municipality(code_muni = "MG", year = 2019)
#Juntar coordenadas para criar o mapa
base_mapa<- left_join(base1, mun , by = 'code_muni')
?read_municipality
# Esperança de vida ao nascer
summary(base3$e0)
hist(base3$e0)
boxplot(base3$e0)
# Relembrando
knitr::include_graphics("img/boxplot.png")
# Esperança de vida ao nascer
summary(base3$e0)
hist(base3$e0)
boxplot(base3$e0)
# Relembrando
knitr::include_graphics("pics/boxplot.png")
# PIB per capita
summary(base3$pib_pc)
hist(base3$pib_pc)
boxplot(base3$pib_pc)
# Transformação logarítmica do PIB per capita
summary(log(base3$pib_pc))
hist(log(base3$pib_pc))
boxplot(log(base3$pib_pc))
# Gráfico de dispersão
ggplot(base3, aes(x=log(pib_pc), y=e0)) +
geom_point()
# Correlação linear entre as variáveis
cor(log(base3$pib_pc),base3$e0)
# Teste de correlação
cor.test(log(base3$pib_pc),base3$e0)
