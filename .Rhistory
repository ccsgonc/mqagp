<<<<<<< HEAD
Cod_setor= as.character(Cod_setor))
df.m <- df.m %>% mutate(
Cod_setor= as.character(Cod_setor))
df.h <- replace(df.h, is.na(df.h), 0)
df.m <- replace(df.m, is.na(df.m), 0)
df.h <- cbind(df.h[,1:8],df.h[,c(9:142)] %>% mutate_if(is.character, as.numeric))
df.m <- cbind(df.m[,1:8],df.m[,c(9:142)] %>% mutate_if(is.character, as.numeric))
df.h <- replace(df.h, is.na(df.h), 0)
df.m <- replace(df.m, is.na(df.m), 0)
df.h <- df.h %>% mutate(
x00_04= V022 + V035 + V036 + V037 + V038,
x05_09= V039 + V040 + V041 + V042 + V043,
x10_14= V044 + V045 + V046 + V047 + V048,
x15_19= V049 + V050 + V051 + V052 + V053,
x20_24= V054 + V055 + V056 + V057 + V058,
x25_29= V059 + V060 + V061 + V062 + V063,
x30_34= V064 + V065 + V066 + V067 + V068,
x35_39= V069 + V070 + V071 + V072 + V073,
x40_44= V074 + V075 + V076 + V077 + V078,
x45_49= V079 + V080 + V081 + V082 + V083,
x50_54= V084 + V085 + V086 + V087 + V088,
x55_59= V089 + V090 + V091 + V092 + V093,
x60_64= V094 + V095 + V096 + V097 + V098,
x65_69= V099 + V100 + V101 + V102 + V103,
x70_74= V104 + V105 + V106 + V107 + V108,
x75_79= V109 + V110 + V111 + V112 + V113,
x80_84= V114 + V115 + V116 + V117 + V118,
x85_mais= V119 + V120 + V121 + V122 + V123 +
V124 + V125 + V126 + V127 + V128 +
V129 + V130 + V131 + V132 + V133 + V134
) %>% select(Cod_setor,Cod_municipio ,
Nome_do_municipio,Cod_bairro ,
Nome_do_bairro,Cod_subdistrito ,
Nome_do_subdistrito,x00_04,  x05_09,
x10_14,              x15_19,
x20_24,              x25_29,
x30_34,              x35_39,
x40_44,              x45_49,
x50_54,              x55_59,
x60_64,              x65_69,
x70_74,              x75_79,
x80_84,              x85_mais)
df.m <- df.m %>% mutate(
x00_04= V022 + V035 + V036 + V037 + V038,
x05_09= V039 + V040 + V041 + V042 + V043,
x10_14= V044 + V045 + V046 + V047 + V048,
x15_19= V049 + V050 + V051 + V052 + V053,
x20_24= V054 + V055 + V056 + V057 + V058,
x25_29= V059 + V060 + V061 + V062 + V063,
x30_34= V064 + V065 + V066 + V067 + V068,
x35_39= V069 + V070 + V071 + V072 + V073,
x40_44= V074 + V075 + V076 + V077 + V078,
x45_49= V079 + V080 + V081 + V082 + V083,
x50_54= V084 + V085 + V086 + V087 + V088,
x55_59= V089 + V090 + V091 + V092 + V093,
x60_64= V094 + V095 + V096 + V097 + V098,
x65_69= V099 + V100 + V101 + V102 + V103,
x70_74= V104 + V105 + V106 + V107 + V108,
x75_79= V109 + V110 + V111 + V112 + V113,
x80_84= V114 + V115 + V116 + V117 + V118,
x85_mais= V119 + V120 + V121 + V122 + V123 +
V124 + V125 + V126 + V127 + V128 +
V129 + V130 + V131 + V132 + V133 + V134
) %>% select(Cod_setor,Cod_municipio ,
Nome_do_municipio,Cod_bairro ,
Nome_do_bairro,Cod_subdistrito ,
Nome_do_subdistrito,x00_04,  x05_09,
x10_14,              x15_19,
x20_24,              x25_29,
x30_34,              x35_39,
x40_44,              x45_49,
x50_54,              x55_59,
x60_64,              x65_69,
x70_74,              x75_79,
x80_84,              x85_mais)
library(tidyr)
df.h_long <- gather(df.h, faixas, t.pop, x00_04:x85_mais) %>% mutate(Sex = "homem")
df.m_long <- gather(df.m, faixas, t.pop, x00_04:x85_mais) %>% mutate(Sex = "mulher")
df.long <- rbind(df.h_long,df.m_long)
rm(df.h_long,df.m_long)
df.long <- df.long %>%
group_by(Cod_setor, Cod_municipio,
Nome_do_municipio, Cod_bairro,
Nome_do_bairro, Cod_subdistrito,
Nome_do_subdistrito) %>%
mutate(p.pop = t.pop/sum(t.pop)*100)
library(DescTools)
df.piramide <- filter(df.long, Cod_setor==setor_escolhido)
df.piramide %>%  filter(Sex== "homem") %>%  select(p.pop)
subset(df.piramide,df.piramide$Sex=="homem")$p.pop
m.pop<- subset(df.piramide,df.piramide$Sex=="mulher")$p.pop
age <- c("0-4","5-9","10-14","15-19","20-24","25-29",
"30-34","35-39","40-44","45-49","50-54",
"55-59","60-64","65-69","70-74","75-79","80-44","85+")
PlotPyramid(h.pop,
m.pop,
ylab = age, space = 0, col = c("cornflowerblue", "indianred"),
xlim=c(-5,5),
main="Pirâmide etária",
lxlab="Homem", rxlab="Mulher", gapwidth=0, ylab.x=-5 )
h.pop<- subset(df.piramide,df.piramide$Sex=="homem")$p.pop
m.pop<- subset(df.piramide,df.piramide$Sex=="mulher")$p.pop
age <- c("0-4","5-9","10-14","15-19","20-24","25-29",
"30-34","35-39","40-44","45-49","50-54",
"55-59","60-64","65-69","70-74","75-79","80-44","85+")
PlotPyramid(h.pop,
m.pop,
ylab = age, space = 0, col = c("cornflowerblue", "indianred"),
xlim=c(-5,5),
main="Pirâmide etária",
lxlab="Homem", rxlab="Mulher", gapwidth=0, ylab.x=-5 )
PlotPyramid(h.pop,
m.pop,
ylab = age, space = 0, col = c("cornflowerblue", "indianred"),
xlim=c(-6,6),
main="Pirâmide etária",
lxlab="Homem", rxlab="Mulher", gapwidth=0, ylab.x=-5 )
PlotPyramid(h.pop,
m.pop,
ylab = age, space = 0, col = c("cornflowerblue", "indianred"),
xlim=c(-6,6),
main="Pirâmide etária",
lxlab="Homem", rxlab="Mulher", gapwidth=0, ylab.x=-6 )
PlotPyramid(h.pop,
m.pop,
ylab = age, space = 0, col = c("cornflowerblue", "indianred"),
xlim=c(-5,5),
main="Pirâmide etária",
lxlab="Homem", rxlab="Mulher", gapwidth=0, ylab.x=-5 )
df.piramide <- filter(df.long, Cod_bairro==bairro_escolhido)
df.piramide <- filter(df.long, Nome_do_bairro==bairro_escolhido)
View(df.piramide)
df.piramide %>% filter(df.long, Nome_do_bairro==bairro_escolhido)
df.piramide %>% filter(Nome_do_bairro==bairro_escolhido)
View(df.piramide)
df.piramide02 <- df.long %>% filter(Nome_do_bairro==bairro_escolhido)
library(remotes)
library(microdatasus)
remotes::install_github("rfsaldanha/microdatasus")
library(microdatasus)
dados_sim <- fetch_datasus(year_start = 2000,
year_end = 2021,
uf = "DF",
information_system = "SIM-DO",
vars=c("DTOBITO","DTNASC","IDADE","SEXO","CODMUNRES"))
dados_sim <- process_sim(dados_sim)
dados_sim<- dados_sim %>% mutate(
obt = 1,
ano = as.numeric(substr(DTOBITO,1,4)),
ano_nasc = as.numeric(substr(DTNASC,1,4)),
IDADEanos = as.numeric(IDADEanos),
faixa_idade =  cut(IDADEanos,c(-Inf,0,4,9,14,19,24,29,34,39,
44,49,54,59,64,69,74,79,84,Inf),
labels = c("_menor que 1 ano",
"01 a 04 anos",
"05 a 09 anos",
"10 a 14 anos",
"15 a 19 anos",
"20 a 24 anos",
"25 a 29 anos",
"30 a 34 anos",
"35 a 39 anos",
"40 a 44 anos",
"45 a 49 anos",
"50 a 54 anos",
"55 a 59 anos",
"60 a 64 anos",
"65 a 69 anos",
"70 a 74 anos",
"75 a 79 anos",
"80 a 84 anos",
"85 anos ou mais")))
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # problema identificado com criação de NA em 2000
dados_sim<- dados_sim %>% mutate(
obt = 1,
ano = as.numeric(substr(DTOBITO,1,4)),
ano_nasc = as.numeric(substr(DTNASC,1,4)),
IDADEanos = as.numeric(IDADEanos),
faixa_idade =  cut(IDADEanos,c(-Inf,0,4,9,14,19,24,29,34,39,
44,49,54,59,64,69,74,79,84,Inf),
labels = c("_menor que 1 ano",
"01 a 04 anos",
"05 a 09 anos",
"10 a 14 anos",
"15 a 19 anos",
"20 a 24 anos",
"25 a 29 anos",
"30 a 34 anos",
"35 a 39 anos",
"40 a 44 anos",
"45 a 49 anos",
"50 a 54 anos",
"55 a 59 anos",
"60 a 64 anos",
"65 a 69 anos",
"70 a 74 anos",
"75 a 79 anos",
"80 a 84 anos",
"85 anos ou mais")))
library(tidyverse)
dados_sim<- dados_sim %>% mutate(
obt = 1,
ano = as.numeric(substr(DTOBITO,1,4)),
ano_nasc = as.numeric(substr(DTNASC,1,4)),
IDADEanos = as.numeric(IDADEanos),
faixa_idade =  cut(IDADEanos,c(-Inf,0,4,9,14,19,24,29,34,39,
44,49,54,59,64,69,74,79,84,Inf),
labels = c("_menor que 1 ano",
"01 a 04 anos",
"05 a 09 anos",
"10 a 14 anos",
"15 a 19 anos",
"20 a 24 anos",
"25 a 29 anos",
"30 a 34 anos",
"35 a 39 anos",
"40 a 44 anos",
"45 a 49 anos",
"50 a 54 anos",
"55 a 59 anos",
"60 a 64 anos",
"65 a 69 anos",
"70 a 74 anos",
"75 a 79 anos",
"80 a 84 anos",
"85 anos ou mais")))
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # problema identificado com criação de NA em 2000
# correção dos NA presente na dados_sim de 2000
dados_sim$ano[which(is.na(dados_sim$ano))]<-2000
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # ok com http://tabnet.datasus.gov.br/cgi/tabcgi.exe?sim/cnv/obt10df.def
# tabela 1 - total de obitos e por sexo
tab1 <-dados_sim  %>%
group_by(ano) %>%
summarise(obt = n())
tab1
tab1a<-dados_sim  %>%
filter(SEXO=="Masculino")%>%
group_by(ano) %>%
summarise(obt_masc = n())
tabela1<-merge(tab1,tab1a,by="ano")
rm(tab1,tab1a)
tabela1
tab1b<-dados_sim  %>%
filter(SEXO=="Feminino")%>%
group_by(ano) %>%
summarise(obt_fem = n())
tabela1<-merge(tabela1,tab1b,by="ano")
rm(tab1b)
tabela1
# ajuste com NA
tabela1$obt_masc_ajust<-round(tabela1$obt_masc/(tabela1$obt_masc+tabela1$obt_fem)*tabela1$obt)
tabela1$obt_fem_ajust<-round(tabela1$obt_fem/(tabela1$obt_masc+tabela1$obt_fem)*tabela1$obt)
# verifica se a soma é verdadeira
tabela1$obt_fem_ajust+tabela1$obt_masc_ajust==tabela1$obt
tabela1
# exportando tabelas
library(writexl)
write_xlsx(tabela1,"Tabela  1a - Total de obitos.xlsx")
# produzir gráfico
tabela1<-ts(tabela1,start = 2000,frequency = 1)
library(zoo)
tabela1m<-rollmean(x = tabela1,k = 3)
write_xlsx(as.data.frame(tabela1m),"Tabela  1b - Total de obitos com ma.xlsx")
tabela1m
write_xlsx(as.data.frame(tabela1m),"Tabela  1b - Total de obitos com ma.xlsx")
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Óbitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
# leitura dos pacotes utilizados
library(readxl)
# leitura da base
proj_ibge<- read_excel("indicadores_projecoes_DF_IBGE.xlsx")
getwd("C:\Users\x15767253\Documents\GitHub\mqagp")
getwd("C:/Users/x15767253/Documents/GitHub/mqagp/")
setwd("C:/Users/x15767253/Documents/GitHub/mqagp/")
# leitura da base
proj_ibge<- read_excel("indicadores_projecoes_DF_IBGE.xlsx")
# alterações para produzir gráficos
proj_ibge<-ts(proj_ibge,start = 2010,frequency = 1)
proj_ibge<-window(proj_ibge,start = 2010,end=2030,frequency = 1)
ggplot(as.data.frame(proj_ibge), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Óbitos")+
ggtitle("Total de óbitos - DF - 2000-2020 ")
ano1<-2010:2030
var1<-c(round(as.data.frame(tabela1)$obt[11:21]),rep(NA,10))
var2<-c(round(as.data.frame(tabela1m)$obt[10:19]),rep(NA,11))
var3<-as.data.frame(proj_ibge)$obt
data1<-data.frame(ano1,var1,var2,var3)
=======
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
p1<-ggplot(data1, aes(x=ano1)) +
geom_line(aes(y=var1, col="SIM"),linetype=1) +
geom_line(aes(y=var2, col="SIM-média móvel"),linetype=1) +
geom_line(aes(y=var3, col="Proj. IBGE"),linetype=1) +
labs(title="Total de óbitos por fonte de dados - DF - 2010-2030", y="Total de óbitos",x=element_blank()) +
scale_color_manual(name="",
values = c("SIM"="coral4",
"SIM-média móvel"="coral3",
"Proj. IBGE"="darkblue")) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))+
scale_x_continuous(breaks=ano1, labels=ano1)
p1
png(filename = "Total de óbitos por fonte de dados - DF - 2010-2030.png",
width = 15, height = 8,
units = "cm",res = 1200)
p1
dev.off()
write_xlsx(data1,"Tabela  1c - Total de óbitos por fontes.xlsx")
# taxa bruta de mortalidade
ano2<-2010:2030
var1<-c(round(as.data.frame(tabela1)$obt[11:21]),rep(NA,10))/
as.data.frame(proj_ibge)$pop_total*1000
var2<-c(round(as.data.frame(tabela1m)$obt[10:19]),rep(NA,11))/
as.data.frame(proj_ibge)$pop_total*1000
var3<-as.data.frame(proj_ibge)$tbm
data2<-data.frame(ano2,var1,var2,var3)
p2<-ggplot(data2, aes(x=ano2)) +
geom_line(aes(y=var1, col="SIM"),linetype=1,size=1.2) +
geom_line(aes(y=var2, col="SIM-média móvel"),linetype=1,size=1.2) +
geom_line(aes(y=var3, col="Proj. IBGE"),linetype=1,size=1.2) +
labs(title="Taxa Bruta de Mortalidade por fonte de dados - DF - 2010-2030",
y="TBM",x=element_blank()) +
scale_color_manual(name="",
values = c("SIM"="coral4",
"SIM-média móvel"="coral3",
"Proj. IBGE"="darkblue")) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))+
scale_x_continuous(breaks=ano2, labels=ano2)
p2
png(filename = "Taxa Bruta de Mortalidade por fonte de dados - DF - 2010-2030.png",
width = 15, height = 8,
units = "cm",res = 1200)
p2
dev.off()
write_xlsx(data2,"Tabela  1d - Taxa Bruta de Mortalidade por fontes.xlsx")
# total de obitos para DF por faixa etaria
tab2 <- dados_sim %>%
group_by(ano,faixa_idade) %>%
summarise(
obt = n())
tab2a <- dados_sim %>%
filter(SEXO=="Masculino")%>%
group_by(ano,faixa_idade) %>%
summarise(
obt_h = n())
tabela2<-merge(tab2,tab2a,by=c("ano","faixa_idade"))
rm(tab2,tab2a)
tab2b <- dados_sim %>%
filter(SEXO=="Feminino")%>%
group_by(ano,faixa_idade) %>%
summarise(
obt_m = n())
tabela2<-merge(tabela2,tab2b,by=c("ano","faixa_idade"))
rm(tab2b)
subset(tabela2,ano==2019) # conferencia ok com http://tabnet.datasus.gov.br/cgi/tabcgi.exe?sim/cnv/obt10df.def
subset(tabela2,ano==2020)
# faz ajuste de NA - faixa da idade
table1<-as.data.frame(tabela1[,c("ano","obt")])
colnames(table1)<-c("ano","obt_total")
tabela2<-merge(tabela2,table1,by=c("ano"))
rm(table1)
<<<<<<< HEAD
tabela2
=======
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
table2 <- tabela2 %>%
filter(!is.na(faixa_idade))%>%
group_by(ano) %>%
summarise(
obt_sem_na = sum(obt))
tabela2<-merge(tabela2,table2,by=c("ano"))
<<<<<<< HEAD
tabela2
=======
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
tabela2$part<-tabela2$obt/tabela2$obt_sem_na
tabela2$obt_ajust<-round(tabela2$part*tabela2$obt_total)
#  arredondou para todos
tabela2 %>%
filter(!is.na(faixa_idade))%>%
group_by(ano) %>%
summarise(
obt_conf = sum(obt_ajust))
<<<<<<< HEAD
tabela2
=======
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
tabela2$obt_h_ajust<-round(tabela2$obt_h/(tabela2$obt_h+tabela2$obt_m)*tabela2$obt_ajust)
tabela2$obt_m_ajust<-round(tabela2$obt_m/(tabela2$obt_h+tabela2$obt_m)*tabela2$obt_ajust)
# conferencia
tabela2$obt_h_ajust+tabela2$obt_m_ajust==tabela2$obt_ajust
<<<<<<< HEAD
tabela2
tabela2$obt_h_ajust<-round(tabela2$obt_h/(tabela2$obt_h+tabela2$obt_m)*tabela2$obt_ajust)
tabela2$obt_m_ajust<-round(tabela2$obt_m/(tabela2$obt_h+tabela2$obt_m)*tabela2$obt_ajust)
# conferencia
tabela2$obt_h_ajust+tabela2$obt_m_ajust==tabela2$obt_ajust
tabela2
=======
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
# população geral
# traz dados de população por faixa etária
pop<-read_excel("pop_faixa_etaria.xlsx",sheet="total")
colnames(pop)
<<<<<<< HEAD
library(tidyr)
pop_wide<-as.data.frame(pop)
pop_long <- pop_wide %>% gather(faixa_idade, pop, -c(ano)) # para fazer o merge coloca o nome faixa_idade_mae_15_49
=======
pop_wide<-as.data.frame(pop)
pop_long <- pop_wide %>% gather(faixa_idade, pop, -c(ano))
library(microdatasus)
library(dplyr)
library(readxl)
library(writexl)
library(zoo)
library(ggplot2)
library(tidyr)
# total de obitos para DF por faixa etaria
tab2 <- dados_sim %>%
group_by(ano,faixa_idade) %>%
summarise(
obt = n())
tab2a <- dados_sim %>%
filter(SEXO=="Masculino")%>%
group_by(ano,faixa_idade) %>%
summarise(
obt_h = n())
tabela2<-merge(tab2,tab2a,by=c("ano","faixa_idade"))
rm(tab2,tab2a)
tab2b <- dados_sim %>%
filter(SEXO=="Feminino")%>%
group_by(ano,faixa_idade) %>%
summarise(
obt_m = n())
tabela2<-merge(tabela2,tab2b,by=c("ano","faixa_idade"))
rm(tab2b)
subset(tabela2,ano==2019) # conferencia ok com http://tabnet.datasus.gov.br/cgi/tabcgi.exe?sim/cnv/obt10df.def
subset(tabela2,ano==2020)
# faz ajuste de NA - faixa da idade
table1<-as.data.frame(tabela1[,c("ano","obt")])
colnames(table1)<-c("ano","obt_total")
tabela2<-merge(tabela2,table1,by=c("ano"))
rm(table1)
table2 <- tabela2 %>%
filter(!is.na(faixa_idade))%>%
group_by(ano) %>%
summarise(
obt_sem_na = sum(obt))
tabela2<-merge(tabela2,table2,by=c("ano"))
tabela2$part<-tabela2$obt/tabela2$obt_sem_na
tabela2$obt_ajust<-round(tabela2$part*tabela2$obt_total)
#  arredondou para todos
tabela2 %>%
filter(!is.na(faixa_idade))%>%
group_by(ano) %>%
summarise(
obt_conf = sum(obt_ajust))
tabela2$obt_h_ajust<-round(tabela2$obt_h/(tabela2$obt_h+tabela2$obt_m)*tabela2$obt_ajust)
tabela2$obt_m_ajust<-round(tabela2$obt_m/(tabela2$obt_h+tabela2$obt_m)*tabela2$obt_ajust)
# conferencia
tabela2$obt_h_ajust+tabela2$obt_m_ajust==tabela2$obt_ajust
# população geral
# traz dados de população por faixa etária
pop<-read_excel("pop_faixa_etaria.xlsx",sheet="total")
colnames(pop)
pop_wide<-as.data.frame(pop)
pop_long <- pop_wide %>% gather(faixa_idade, pop, -c(ano))
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
tabela2<-merge(tabela2,pop_long,by=c("ano","faixa_idade"))
tabela2
# Taxas Específicas de Mortalidade (TEM) por idade (nMx)
tabela2$tem<-tabela2$obt_ajust/tabela2$pop
#fazendo a média móvel
tabela2[,c("ano","faixa_idade","obt_ajust")]
table2<-spread(tabela2[,c("ano","faixa_idade","obt_ajust")],faixa_idade,obt_ajust)
<<<<<<< HEAD
View(table2)
=======
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
table2<-ts(table2,start = 2010,frequency = 1)
library(zoo)
library(ggplot2)
table2m<-rollmean(x = table2,k = 3)
table2m<-as.data.frame(table2m) %>% gather(faixa_idade, obt_ajust_m, -c(ano)) # para fazer o merge coloca o nome faixa_idade
tabela2<-merge(tabela2,table2m,by=c("ano","faixa_idade"),all.x = TRUE)
colnames(tabela2)
tabela2$tem_m<-tabela2$obt_ajust_m/tabela2$pop
tabela2$ano<-as.character(tabela2$ano)
data<-subset(tabela2,ano!=2010&ano!=2020)
p4<-ggplot(data, aes(x=faixa_idade, y=log(tem_m),group=ano,color=ano)) +
geom_line(linetype=1,size=1.2) +
labs(title="Taxas Específicas de Mortalidade por ano - DF - 2010-2020",
y="ln(TEM)",x=element_blank()) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))
p4
png(filename = "Taxas Específicas de Mortalidade por ano - DF - 2010-2020.png",
width = 15, height = 12,
units = "cm",res = 1200)
p4
dev.off()
write_xlsx(tabela2,"Tabela  1e - Taxas Específicas de Mortalidade.xlsx")
# população homens
# traz dados de população por faixa etária
pop_h<-read_excel("pop_faixa_etaria.xlsx",sheet="homens")
colnames(pop_h)
library(tidyr)
pop_h_wide<-as.data.frame(pop_h)
pop_h_long <- pop_h_wide %>% gather(faixa_idade, pop_h, -c(ano)) # para fazer o merge coloca o nome faixa_idade_mae_15_49
tabela2<-merge(tabela2,pop_h_long,by=c("ano","faixa_idade"))
# Taxas Específicas de Mortalidade (TEM) masculina por idade (nMx)
tabela2$tem_h<-tabela2$obt_h_ajust/tabela2$pop_h
#fazendo a média móvel
table2h<-spread(tabela2[,c("ano","faixa_idade","obt_h_ajust")],faixa_idade,obt_h_ajust)
table2h$ano<-as.numeric(table2h$ano)
table2h<-ts(table2h,start = 2010,frequency = 1)
library(zoo)
library(ggplot2)
table2hm<-rollmean(x = table2h,k = 3)
table2hm<-as.data.frame(table2hm)
table2hm<-table2hm %>% gather(faixa_idade, obt_h_ajust_m, -c(ano)) # para fazer o merge coloca o nome faixa_idade
tabela2<-merge(tabela2,table2hm,by=c("ano","faixa_idade"),all.x = TRUE)
colnames(tabela2)
tabela2$tem_h_m<-tabela2$obt_h_ajust_m/tabela2$pop_h
tabela2$ano<-as.character(tabela2$ano)
data<-subset(tabela2,ano!=2010&ano!=2020)
p4<-ggplot(data, aes(x=faixa_idade, y=log(tem_h_m),group=ano,color=ano)) +
geom_line(linetype=1,size=1.2) +
labs(title="Taxas Específicas de Mortalidade dos homens por ano - DF - 2010-2020",
y="ln(TEM)",x=element_blank()) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))
p4
png(filename = "Taxas Específicas de Mortalidade dos homens por ano - DF - 2010-2020.png",
width = 15, height = 12,
units = "cm",res = 1200)
p4
dev.off()
# população mulheres
library(readxl)
# traz dados de população por faixa etária
pop_m<-read_excel("pop_faixa_etaria.xlsx",sheet="mulheres")
colnames(pop_m)
library(tidyr)
pop_m_wide<-as.data.frame(pop_m)
pop_m_long <- pop_m_wide %>% gather(faixa_idade, pop_m, -c(ano)) # para fazer o merge coloca o nome faixa_idade_mae_15_49
tabela2<-merge(tabela2,pop_m_long,by=c("ano","faixa_idade"))
# Taxas Específicas de Mortalidade (TEM) feminina por idade (nMx)
tabela2$tem_mu<-tabela2$obt_m_ajust/tabela2$pop_m
#fazendo a média móvel
table2<-spread(tabela2[,c("ano","faixa_idade","obt_m_ajust")],faixa_idade,obt_m_ajust)
table2$ano<-as.numeric(table2$ano)
table2<-ts(table2,start = 2010,frequency = 1)
library(zoo)
library(ggplot2)
table2m<-rollmean(x = table2,k = 3)
table2m<-as.data.frame(table2m)
table2m<-table2m %>% gather(faixa_idade, obt_m_ajust_m, -c(ano)) # para fazer o merge coloca o nome faixa_idade
tabela2<-merge(tabela2,table2m,by=c("ano","faixa_idade"),all.x = TRUE)
colnames(tabela2)
tabela2$tem_m_m<-tabela2$obt_m_ajust_m/tabela2$pop_m
tabela2$ano<-as.character(tabela2$ano)
data<-subset(tabela2,ano!=2010&ano!=2020)
p4<-ggplot(data, aes(x=faixa_idade, y=log(tem_m_m),group=ano,color=ano)) +
geom_line(linetype=1,size=1.2) +
labs(title="Taxas Específicas de Mortalidade das mulheres por ano - DF - 2010-2020",
y="ln(TEM)",x=element_blank()) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))
p4
png(filename = "Taxas Específicas de Mortalidade das mulheres por ano - DF - 2010-2020.png",
width = 15, height = 12,
units = "cm",res = 1200)
p4
dev.off()
write_xlsx(tabela2,"Tabela  1f - Taxas Específicas de Mortalidade por sexo.xlsx")
<<<<<<< HEAD
# trazer informação do total de nascidos vivos
library(readxl)
nascidos_vivos<- read_excel("Tabela  1b - Total de nascimentos com média móvel.xlsx")
=======
# Taxa de Mortalidade Infantil (TMI)
# trazer informação do total de nascidos vivos
nascidos_vivos<- read_excel("Tabela  1b - Total de nascimentos com média móvel.xlsx")
subset(tabela2,faixa_idade=="_menor que 1 ano")
tabela3<-subset(tabela2,faixa_idade=="_menor que 1 ano")
tabela3<-merge(tabela3,nascidos_vivos,by=("ano"),all.x=TRUE)
tabela3$tmi<-tabela3$obt_ajust_m/tabela3$nasc
tabela3$tmi_h<-tabela3$obt_h_ajust_m/tabela3$nasc_masc_ajust
tabela3$tmi_m<-tabela3$obt_m_ajust_m/tabela3$nasc_fem_ajust
ano4<-2010:2030
var1<-c(tabela3$tmi,rep(NA,9))*1000
var2<-c(tabela3$tmi_h,rep(NA,9))*1000
var3<-c(tabela3$tmi_m,rep(NA,9))*1000
var4<-as.data.frame(proj_ibge)$mort_infantil_total
var5<-as.data.frame(proj_ibge)$mort_infantil_homens
var6<-as.data.frame(proj_ibge)$mort_infantil_mulheres
data4<-data.frame(ano4,var1,var2,var3,var4,var5,var6)
# trazer informação do total de nascidos vivos
nascidos_vivos<- read_excel("Tabela  1b - Total de nascimentos com média móvel.xlsx")
View(nascidos_vivos)
subset(tabela2,faixa_idade=="_menor que 1 ano")
View(tabela2)
# população homens
# traz dados de população por faixa etária
pop_h<-read_excel("pop_faixa_etaria.xlsx",sheet="homens")
View(pop_h)
View(table2h)
View(dados_sim)
table(dados_sim$IDADEanos)
summary(dados_sim$IDADEanos)
dados_sim <- fetch_datasus(year_start = 2000,
year_end = 2021,
uf = "DF",
information_system = "SIM-DO",
vars=c("DTOBITO","DTNASC","IDADE","SEXO","CODMUNRES"))
View(dados_sim)
dados_sim <- process_sim(dados_sim)
View(dados_sim)
dados_sim<- dados_sim %>% mutate(
obt = 1,
ano = as.numeric(substr(DTOBITO,1,4)),
ano_nasc = as.numeric(substr(DTNASC,1,4)),
IDADEanos = as.numeric(IDADEanos),
faixa_idade =  cut(IDADEanos,c(-Inf,1,4,9,14,19,24,29,34,39,
44,49,54,59,64,69,74,79,84,Inf),
labels = c("_menor que 1 ano",
"01 a 04 anos",
"05 a 09 anos",
"10 a 14 anos",
"15 a 19 anos",
"20 a 24 anos",
"25 a 29 anos",
"30 a 34 anos",
"35 a 39 anos",
"40 a 44 anos",
"45 a 49 anos",
"50 a 54 anos",
"55 a 59 anos",
"60 a 64 anos",
"65 a 69 anos",
"70 a 74 anos",
"75 a 79 anos",
"80 a 84 anos",
"85 anos ou mais")))
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # problema identificado com criação de NA em 2000
# correção dos NA presente na dados_sim de 2000
dados_sim$ano[which(is.na(dados_sim$ano))]<-2000
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # ok com http://tabnet.datasus.gov.br/cgi/tabcgi.exe?sim/cnv/obt10df.def
# Taxas Específicas de Mortalidade (TEM) por idade (nMx)
tabela2$tem<-tabela2$obt_ajust/tabela2$pop
#fazendo a média móvel
tabela2[,c("ano","faixa_idade","obt_ajust")]
table2<-spread(tabela2[,c("ano","faixa_idade","obt_ajust")],faixa_idade,obt_ajust)
table2<-ts(table2,start = 2010,frequency = 1)
library(zoo)
library(ggplot2)
table2m<-rollmean(x = table2,k = 3)
table2m<-as.data.frame(table2m) %>% gather(faixa_idade, obt_ajust_m, -c(ano)) # para fazer o merge coloca o nome faixa_idade
tabela2<-merge(tabela2,table2m,by=c("ano","faixa_idade"),all.x = TRUE)
colnames(tabela2)
tabela2$tem_m<-tabela2$obt_ajust_m/tabela2$pop
dados_sim <- fetch_datasus(year_start = 2000,
year_end = 2021,
uf = "DF",
information_system = "SIM-DO",
vars=c("DTOBITO","DTNASC","IDADE","SEXO","CODMUNRES"))
dados_sim <- process_sim(dados_sim)
dados_sim<- dados_sim %>% mutate(
obt = 1,
ano = as.numeric(substr(DTOBITO,1,4)),
ano_nasc = as.numeric(substr(DTNASC,1,4)),
IDADEanos = as.numeric(IDADEanos),
faixa_idade =  cut(IDADEanos,c(-Inf,1,4,9,14,19,24,29,34,39,
44,49,54,59,64,69,74,79,84,Inf),
labels = c("_menor que 1 ano",
"01 a 04 anos",
"05 a 09 anos",
"10 a 14 anos",
"15 a 19 anos",
"20 a 24 anos",
"25 a 29 anos",
"30 a 34 anos",
"35 a 39 anos",
"40 a 44 anos",
"45 a 49 anos",
"50 a 54 anos",
"55 a 59 anos",
"60 a 64 anos",
"65 a 69 anos",
"70 a 74 anos",
"75 a 79 anos",
"80 a 84 anos",
"85 anos ou mais")))
proj_ibge<- read_excel("indicadores_projecoes_DF_IBGE.xlsx")
proj_ibge<-ts(proj_ibge,start = 2010,frequency = 1)
proj_ibge<-window(proj_ibge,start = 2010,end=2030,frequency = 1)
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # problema identificado com criação de NA em 2000
# correção dos NA presente na dados_sim de 2000
dados_sim$ano[which(is.na(dados_sim$ano))]<-2000
# total de óbitos para DF
aggregate(data=dados_sim,obt~ano, FUN= sum) # ok com http://tabnet.datasus.gov.br/cgi/tabcgi.exe?sim/cnv/obt10df.def
# tabela 1 - total de obitos e por sexo
tab1 <-dados_sim  %>%
group_by(ano) %>%
summarise(obt = n())
tab1a<-dados_sim  %>%
filter(SEXO=="Masculino")%>%
group_by(ano) %>%
summarise(obt_masc = n())
tabela1<-merge(tab1,tab1a,by="ano")
rm(tab1,tab1a)
tab1b<-dados_sim  %>%
filter(SEXO=="Feminino")%>%
group_by(ano) %>%
summarise(obt_fem = n())
tabela1<-merge(tabela1,tab1b,by="ano")
rm(tab1b)
# ajuste com NA
tabela1$obt_masc_ajust<-round(tabela1$obt_masc/(tabela1$obt_masc+tabela1$obt_fem)*tabela1$obt)
tabela1$obt_fem_ajust<-round(tabela1$obt_fem/(tabela1$obt_masc+tabela1$obt_fem)*tabela1$obt)
# verifica se a soma é verdadeira
tabela1$obt_fem_ajust+tabela1$obt_masc_ajust==tabela1$obt
tabela1
# exportando tabelas
write_xlsx(tabela1,"Tabela  1a - Total de obitos.xlsx")
# produzir gráfico
tabela1<-ts(tabela1,start = 2000,frequency = 1)
library(zoo)
tabela1m<-rollmean(x = tabela1,k = 3)
tabela1m
write_xlsx(as.data.frame(tabela1m),"Tabela  1b - Total de obitos com ma.xlsx")
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Óbitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
View(tabela1m)
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point()
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Óbitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
# produzir gráfico
tabela1<-ts(tabela1,start = 2000,frequency = 1)
library(zoo)
tabela1m<-rollmean(x = tabela1,k = 3)
tabela1m
write_xlsx(as.data.frame(tabela1m),"Tabela  1b - Total de obitos com ma.xlsx")
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Obitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Obitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
ggplot(as.data.frame(tabela1m), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Obitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
ggplot(as.data.frame(proj_ibge), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Óbitos")+
ggtitle("Total de óbitos - DF - 2000-2020 ")
ggplot(as.data.frame(proj_ibge), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Óbitos")+
ggtitle("Total de óbitos - DF - 2000-2020 ")
ggplot(as.data.frame(proj_ibge), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Obitos")+
ggtitle("Total de óbitos - DF - 2000-2020 ")
ggplot(as.data.frame(proj_ibge), aes(x=ano, y=obt)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Ano")+
ylab("Obitos")+
ggtitle("Total de obitos - DF - 2000-2020 ")
ano1<-2010:2030
var1<-c(round(as.data.frame(tabela1)$obt[11:21]),rep(NA,10))
var2<-c(round(as.data.frame(tabela1m)$obt[10:19]),rep(NA,11))
var3<-as.data.frame(proj_ibge)$obt
data1<-data.frame(ano1,var1,var2,var3)
p1<-ggplot(data1, aes(x=ano1)) +
geom_line(aes(y=var1, col="SIM"),linetype=1) +
geom_line(aes(y=var2, col="SIM-média móvel"),linetype=1) +
geom_line(aes(y=var3, col="Proj. IBGE"),linetype=1) +
labs(title="Total de óbitos por fonte de dados - DF - 2010-2030", y="Total de óbitos",x=element_blank()) +
scale_color_manual(name="",
values = c("SIM"="coral4",
"SIM-média móvel"="coral3",
"Proj. IBGE"="darkblue")) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))+
scale_x_continuous(breaks=ano1, labels=ano1)
p1
ano1<-2010:2030
var1<-c(round(as.data.frame(tabela1)$obt[11:21]),rep(NA,10))
var2<-c(round(as.data.frame(tabela1m)$obt[10:19]),rep(NA,11))
var3<-as.data.frame(proj_ibge)$obt
data1<-data.frame(ano1,var1,var2,var3)
p1<-ggplot(data1, aes(x=ano1)) +
geom_line(aes(y=var1, col="SIM"),linetype=1) +
geom_line(aes(y=var2, col="SIM-média móvel"),linetype=1) +
geom_line(aes(y=var3, col="Proj. IBGE"),linetype=1) +
labs(title="Total de óbitos por fonte de dados - DF - 2010-2030", y="Total de óbitos",x=element_blank()) +
scale_color_manual(name="",
values = c("SIM"="coral4",
"SIM-média móvel"="coral3",
"Proj. IBGE"="darkblue")) +
# ylim(0,NA)+
theme(legend.position="bottom",axis.text.x = element_text(angle = 90))+
scale_x_continuous(breaks=ano1, labels=ano1)
p1
>>>>>>> 102a410446ca13a899d81a26bf44e1c6156f3721
